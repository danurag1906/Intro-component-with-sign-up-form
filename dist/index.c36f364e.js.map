{"mappings":"AAAA,MAAM,OAAO,SAAS,cAAc,CAAC;AACrC,MAAM,QAAQ,SAAS,cAAc,CAAC;AACtC,MAAM,QAAQ,SAAS,cAAc,CAAC;AACtC,MAAM,QAAQ,SAAS,cAAc,CAAC;AACtC,MAAM,WAAW,SAAS,cAAc,CAAC;AACzC,MAAM,SAAO,SAAS,cAAc,CAAC;AAErC,KAAK,gBAAgB,CAAC,UAAU,OAAO,IAAM;IAC3C,EAAE,cAAc;IAEhB;AAEF;AAEA,MAAM,WAAW,CAAC,SAAS,UAAY;IACrC,MAAM,cAAc,QAAQ,aAAa;IACzC,MAAM,WAAW,YAAY,aAAa,CAAC;IAC3C,MAAM,eAAe,YAAY,aAAa,CAAC;IAE/C,aAAa,SAAS,GAAG;IACzB,wCAAwC;IACxC,SAAS,SAAS,CAAC,GAAG,CAAC;IACvB,SAAS,SAAS,CAAC,MAAM,CAAC;AAC5B;AAEA,MAAM,aAAa,CAAC,UAAY;IAC9B,MAAM,cAAc,QAAQ,aAAa;IACzC,MAAM,cAAc,YAAY,aAAa,CAAC;IAC9C,YAAY,SAAS,GAAG;IAExB,MAAM,WAAS,YAAY,aAAa,CAAC;IACzC,SAAS,SAAS,CAAC,GAAG,CAAC;IACvB,SAAS,SAAS,CAAC,MAAM,CAAC;AAC5B;AAEA,MAAM,aAAW,CAAC,SAAQ,UAAU;IAClC,MAAM,cAAY,QAAQ,aAAa;IACvC,MAAM,WAAS,YAAY,aAAa,CAAC;IACzC,MAAM,eAAa,YAAY,aAAa,CAAC;IAC7C,aAAa,SAAS,GAAC;IAEvB,SAAS,SAAS,CAAC,GAAG,CAAC;IACvB,SAAS,SAAS,CAAC,MAAM,CAAC;AAC5B;AAEA,MAAM,iBAAiB,IAAM;IAC3B,MAAM,YAAY,MAAM,KAAK,CAAC,IAAI;IAClC,MAAM,WAAW,MAAM,KAAK,CAAC,IAAI;IACjC,MAAM,aAAa,MAAM,KAAK,CAAC,IAAI;IACnC,MAAM,gBAAgB,SAAS,KAAK,CAAC,IAAI;IACzC,MAAM,aAAa;IAEnB,YAAY;IACZ,IAAI,cAAc,IAChB,SAAS,OAAO;SAGhB,WAAW;IAGb,WAAW;IACX,IAAI,aAAa,IACf,SAAS,OAAO;SAGhB,WAAW;IAGb,OAAO;IACP,IAAG,eAAe,IACd,SAAS,OAAM;SAGd,IAAG,CAAC,WAAW,KAAK,CAAC,aACtB,WAAW,OAAM;SAGjB,WAAW;IAGf,aAAa;IACb,IAAG,kBAAkB,IACjB,SAAS,UAAS;SAIlB,WAAW;IAGf,WAAW;IACX,IAAG,cAAa,MAAM,aAAW,MAAM,eAAa,MAAM,kBAAgB,IAAG;QAC3E,MAAM,YAAU;QAChB,UAAU,SAAS,CAAC,GAAG,CAAC;IAC1B,OACI;QACF,MAAM,aAAU;QAChB,WAAU,SAAS,CAAC,MAAM,CAAC;IAC7B,CAAC;AAIH","sources":["index.js"],"sourcesContent":["const form = document.getElementById(\"form\");\r\nconst fname = document.getElementById(\"fname\");\r\nconst lname = document.getElementById(\"lname\");\r\nconst email = document.getElementById(\"email\");\r\nconst password = document.getElementById(\"password\");\r\nconst button=document.getElementById(\"button\");\r\n\r\nform.addEventListener(\"submit\", async (e) => {\r\n  e.preventDefault();\r\n\r\n  validateInputs();\r\n\r\n});\r\n\r\nconst setError = (element, message) => {\r\n  const formcontrol = element.parentElement;\r\n  const inputtag = formcontrol.querySelector(\".input\");\r\n  const errordisplay = formcontrol.querySelector(\".error\");\r\n\r\n  errordisplay.innerText = message;\r\n  // errordisplay.classList.add(\" error\");\r\n  inputtag.classList.add(\"focuserror\");\r\n  inputtag.classList.remove(\"success\");\r\n};\r\n\r\nconst setSuccess = (element) => {\r\n  const formcontrol = element.parentElement;\r\n  const errodisplay = formcontrol.querySelector(\".error\");\r\n  errodisplay.innerText = \"\";\r\n\r\n  const inputtag=formcontrol.querySelector(\".input\");\r\n  inputtag.classList.add(\"success\")\r\n  inputtag.classList.remove(\"focuserror\")\r\n};\r\n\r\nconst falseEmail=(element,message)=>{\r\n  const formcontrol=element.parentElement;\r\n  const inputtag=formcontrol.querySelector('.input');\r\n  const errordisplay=formcontrol.querySelector('.error');\r\n  errordisplay.innerText=message;\r\n\r\n  inputtag.classList.add(\"focuserror\")\r\n  inputtag.classList.remove(\"succes\")\r\n}\r\n\r\nconst validateInputs = () => {\r\n  const firstname = fname.value.trim();\r\n  const lastname = lname.value.trim();\r\n  const emailvalue = email.value.trim();\r\n  const passwordvalue = password.value.trim();\r\n  const validRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n\r\n  //first name\r\n  if (firstname === \"\") {\r\n    setError(fname, \"First Name cannot be empty\");\r\n    // console.log(\"name is required\");\r\n  } else {\r\n    setSuccess(fname);\r\n  }\r\n\r\n  //last name\r\n  if (lastname === \"\") {\r\n    setError(lname, \"Last Name cannot be empty\");\r\n    // console.log(\"name is required\");\r\n  } else {\r\n    setSuccess(lname);\r\n  }\r\n\r\n  //email\r\n  if(emailvalue === \"\"){\r\n      setError(email,\"Email cannot be empty\")\r\n      // console.log(\"name is required\");\r\n  }\r\n  else if(!emailvalue.match(validRegex)){\r\n      falseEmail(email,\"Looks like this is not an email\")\r\n  }\r\n  else{\r\n      setSuccess(email)\r\n  }\r\n\r\n  // //password\r\n  if(passwordvalue === \"\"){\r\n      setError(password,\"password cannot be empty\")\r\n      // console.log(\"name is required\");\r\n  }\r\n  else{\r\n      setSuccess(password)\r\n  }\r\n\r\n  // //button\r\n  if(firstname ==='' || lastname==='' || emailvalue==='' || passwordvalue===''){\r\n    const buttonset=button;\r\n    buttonset.classList.add(\"inactive\");\r\n  }\r\n  else{\r\n    const buttonset=button;\r\n    buttonset.classList.remove(\"inactive\");\r\n  }\r\n\r\n\r\n\r\n};\r\n"],"names":[],"version":3,"file":"index.c36f364e.js.map","sourceRoot":"/__parcel_source_root/"}